% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check.R
\name{check}
\alias{check}
\title{Identify sequences with potentially erroneous lineage metadata.}
\usage{
check(x, db, level = "order", threshold = 0.97, quiet = FALSE)
}
\arguments{
\item{x}{a DNAbin list object with "taxID", "lineage" and/or "species" attributes
(see \code{\link{searchGB}} for details).}

\item{db}{a copy of the NCBI taxonomy database as a data.frame object
(see \code{\link{download_taxon}}).}

\item{level}{character string giving the taxonomic level at which
heterogeneity within a cluster will flag a sequence as potentially erroneous.
Should be a recognized rank within the NCBI taxonomy database.}

\item{threshold}{numeric between 0 and 1 giving the OTU similarity cutoff value
with which to cluster the sequences.}

\item{quiet}{logical indicating whether progress should be printed to the console.}
}
\value{
a data frame containing the names of the potentially erroneous sequences.
  The output object has zero rows if no sequences are flagged.
}
\description{
This function evaluates a list of DNA barcode sequences
   (a "DNAbin" object with "taxID", "lineage" and/or "species" attributes;
   see \code{\link{searchGB}} for details)
   and returns a table identifying the sequences that
   may require further checking before being used as training
   data for downstream tree-learning operations.
}
\details{
This function first clusters the sequence dataset into operational
  taxonomic units (OTUs) based on a given genetic distance threshold using the
  \code{\link[kmer]{otu}} function in the \code{\link{kmer}} package.
  It then proceeds to check each cluster
  for lineage homogeneity at a given taxonomic rank,
  flagging any records that appear out of place based on the taxa/lineages
  of the other OTU members.
}
\examples{
  data(whales)
  data(whale_taxa)
  dodgy_seqs <- check(whales, db = whale_taxa, level = "species")
  whales <- subset.DNAbin(whales, subset = !names(whales) \%in\% rownames(dodgy_seqs))
}
\author{
Shaun Wilkinson
}
