% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learn.R
\name{learn}
\alias{learn}
\title{Informatic sequence classification tree learning.}
\usage{
learn(x, model = NULL, refine = "Viterbi", iterations = 50, minK = 2,
  maxK = 2, minscore = 0.9, probs = 0.05, resize = TRUE,
  maxsize = NULL, seqweights = "Gerstein", recursive = TRUE, cores = 1,
  quiet = FALSE, ...)
}
\arguments{
\item{x}{an object of class\code{"DNAbin"} representing a list of
DNA sequences to be used as the traning data for the tree-learning process.
All sequences should be from the same genetic region of interest
and be globally alignable (i.e. without unjustified end-gaps).}

\item{model}{an optional object of class \code{"PHMM"} to form the model
at the root node of the classification tree. Used to train (optimize
parameters for) subsequent nested models to be positioned at successive
sub-nodes. If NULL, the root model is derived \emph{de-novo} from the
sequence list prior to the recursive partitioning process.}

\item{refine}{character string giving the iterative model refinement
method to be used in the partitioning process. Valid options are
\code{"Viterbi"} (Viterbi training; the default option) and
\code{"BaumWelch"} (a modified version of the Expectation-Maximization
algorithm).}

\item{iterations}{integer giving the maximum number of training-classification
iterations to be used in the splitting process (see details section).
Note that this is not necessarily the same as the number of Viterbi training
or Baum Welch iterations to be used in model training, which can be set
using the argument \code{"maxiter"} (eventually passed to
\code{\link[aphid]{train}} via the dots argument "...").}

\item{minK}{integer. The minimum number of furications allowed at each inner
node of the tree. Defaults to 2 (all inner nodes are bifuricating).}

\item{maxK}{integer. The maximum number of furications allowed at each inner
node of the tree. Defaults to 2 (all inner nodes are bifuricating).}

\item{minscore}{numeric between 0 and 1. The minimum acceptable value
for the \emph{n}th percentile of Akaike weights (where \emph{n} is
the value given in \code{"probs"}, for the node to be split and the
recursion process to continue.
At any given node, if the \emph{n}th percentile of Akaike weights
falls below this threshold, the recursion process for the node will
terminate. As an extreme example, if \code{minscore = 0.9} and
\code{probs = 0.05} (the default settings), and after generating two
candidate PHMMs to occupy the candidate subnodes the lower 5th percentile
of Akaike weights is 0.89, the splitting process will
terminate and the function will simply return the unsplit root node.}

\item{probs}{numeric between 0 and 1. The percentile of Akaike weights
to test against the minimum score threshold given in \code{"minscore"}.}

\item{resize}{logical indicating whether the models should be free to
change size during the training process or if the number of modules
should be fixed. Defaults to TRUE. Only applicable if
\code{refine = "Viterbi"}.}

\item{maxsize}{integer giving the upper bound on the number of modules
in the PHMMs. If NULL (default) no maximum size is enforced.}

\item{seqweights}{an optional numeric vector the same length as the
sequence list giving the weights to use when training the
PHMMs. Alternatively its length can be the same as the total number
of unique sequences as specified in \code{duplicates}.
The character string "Gerstein" is also valid, which calls
the \code{\link[aphid]{weight}} function in the
\code{\link[aphid]{aphid}} package to derive the weights using the
algorithm of Gerstein et al. 1994.
If NULL, all sequences are given weights of 1.}

\item{recursive}{logical indicating whether the splitting process
should continue recursively until the discrimination criteria
are not met (TRUE; default), or whether a single split should
take place at the root node.}

\item{cores}{integer giving the number of CPUs to use
when training the models (only applicable if
\code{refine = 'Viterbi'}). Defaults to 1.
This argument may alternatively be a 'cluster' object,
in which case it is the user's responsibility to close the socket
connection at the conclusion of the operation,
e.g. by running \code{parallel::stopCluster(cores)}.
The string 'autodetect' is also accepted, in which case the maximum
number of cores to use is one less than the total number of cores
available.}

\item{quiet}{logical indicating whether feedback should be printed
to the console. Note that the output can be rather verbose for
larger trees.}

\item{...}{further arguments to be passed to \code{\link{partition}}
(which may then be passed on to \code{\link[aphid]{train}}).}
}
\value{
an object of class \code{"insect"}. This object is a
  \code{"dendrogram"} with several additional attributes including:
  "sequences" the sequences attribute of the root node is the
  original object \code{x}, while the sequences attributes of all
  subnodes are indices pointing to which sequences in \code{x}
  belong to the node (this saves on memory).
  "weights" (root node only) a numeric vector giving the weights of the
  \emph{unique} sequences in \code{x} (as indicated by
  \code{duplicates}).
  "duplicates" (root node only) a logical vector the same length as
  \code{x} indicating which sequences are duplicated.
  "pointers" (root node only) integer vector the same length as
  \code{x} indicating which sequence in \code{x} each sequence
  is a duplicate of. If there are no duplicates this is simply
  \code{1:length(x)}.
}
\description{
This function creates classification trees using recursive
  partitioning and nested profile hidden Markov models.
}
\details{
TBA.
}
\examples{
  ## TBA
}
\references{
Blackshields G, Sievers F, Shi W, Wilm A, Higgins DG (2010) Sequence embedding
  for fast construction of guide trees for multiple sequence alignment.
  \emph{Algorithms for Molecular Biology}, \strong{5}, 21.

  Durbin R, Eddy SR, Krogh A, Mitchison G (1998) Biological
  sequence analysis: probabilistic models of proteins and nucleic acids.
  Cambridge University Press, Cambridge, United Kingdom.

  Gerstein M, Sonnhammer ELL, Chothia C (1994) Volume changes in protein evolution.
  \emph{Journal of Molecular Biology}, \strong{236}, 1067-1078.

  Juang B-H, Rabiner LR (1990) The segmental K-means
  algorithm for estimating parameters of hidden Markov models.
  \emph{IEEE Transactions on Acoustics, Speech, and Signal Processing},
  \strong{38}, 1639-1641.
}
\seealso{
\code{\link{partition}}
}
\author{
Shaun Wilkinson
}
